[{"D:\\itra\\share-your-collections-app\\client\\src\\index.js":"1","D:\\itra\\share-your-collections-app\\client\\src\\App.js":"2","D:\\itra\\share-your-collections-app\\client\\src\\redux\\store.js":"3","D:\\itra\\share-your-collections-app\\client\\src\\shared\\auth.js":"4","D:\\itra\\share-your-collections-app\\client\\src\\shared\\Header.js":"5","D:\\itra\\share-your-collections-app\\client\\src\\redux\\reducer.js":"6","D:\\itra\\share-your-collections-app\\client\\src\\hooks\\useRequest.hook.js":"7","D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\AdminPage.js":"8","D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\UsersTable.js":"9","D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\ControlPanel.js":"10","D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\User.js":"11","D:\\itra\\share-your-collections-app\\client\\src\\pages\\SignUpPage\\SignUpPage.js":"12","D:\\itra\\share-your-collections-app\\client\\src\\pages\\SignInPage\\SignInPage.js":"13","D:\\itra\\share-your-collections-app\\client\\src\\pages\\Search\\SearchPage.js":"14","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\ItemPage.js":"15","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\Info.js":"16","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\ItemFields.js":"17","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\Comments.js":"18","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\Comment.js":"19","D:\\itra\\share-your-collections-app\\client\\src\\pages\\HomePage\\HomePage.js":"20","D:\\itra\\share-your-collections-app\\client\\src\\pages\\HomePage\\BiggestCollections.js":"21","D:\\itra\\share-your-collections-app\\client\\src\\pages\\HomePage\\LastItems.js":"22","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\CollectionsPage.js":"23","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\CollectionsContainer.js":"24","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\ControlPanel.js":"25","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\Collection.js":"26","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\CreateCollectionModal.js":"27","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\CollectionPage.js":"28","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\ItemsContainer.js":"29","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\Info.js":"30","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\Item.js":"31","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\FilterView.js":"32","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\SortView.js":"33","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\ChangeFieldsModal.js":"34","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\ItemCreateModal.js":"35"},{"size":312,"mtime":1653075607920,"results":"36","hashOfConfig":"37"},{"size":2871,"mtime":1653079052317,"results":"38","hashOfConfig":"37"},{"size":112,"mtime":1653075608201,"results":"39","hashOfConfig":"37"},{"size":1107,"mtime":1653075608201,"results":"40","hashOfConfig":"37"},{"size":7323,"mtime":1653088817034,"results":"41","hashOfConfig":"37"},{"size":1136,"mtime":1653075608201,"results":"42","hashOfConfig":"37"},{"size":1071,"mtime":1653075607909,"results":"43","hashOfConfig":"37"},{"size":822,"mtime":1653075607925,"results":"44","hashOfConfig":"37"},{"size":2437,"mtime":1653075607931,"results":"45","hashOfConfig":"37"},{"size":2604,"mtime":1653262131464,"results":"46","hashOfConfig":"37"},{"size":1575,"mtime":1653075607929,"results":"47","hashOfConfig":"37"},{"size":3077,"mtime":1653089501578,"results":"48","hashOfConfig":"37"},{"size":3867,"mtime":1653079041598,"results":"49","hashOfConfig":"37"},{"size":4320,"mtime":1653089888660,"results":"50","hashOfConfig":"37"},{"size":2293,"mtime":1653079041598,"results":"51","hashOfConfig":"37"},{"size":7513,"mtime":1653075608186,"results":"52","hashOfConfig":"37"},{"size":5557,"mtime":1653089835646,"results":"53","hashOfConfig":"37"},{"size":3408,"mtime":1653075608186,"results":"54","hashOfConfig":"37"},{"size":461,"mtime":1653075608170,"results":"55","hashOfConfig":"37"},{"size":334,"mtime":1653075608139,"results":"56","hashOfConfig":"37"},{"size":1371,"mtime":1653075608123,"results":"57","hashOfConfig":"37"},{"size":1186,"mtime":1653075608139,"results":"58","hashOfConfig":"37"},{"size":1572,"mtime":1653075608092,"results":"59","hashOfConfig":"37"},{"size":1318,"mtime":1653075608092,"results":"60","hashOfConfig":"37"},{"size":2484,"mtime":1653075608092,"results":"61","hashOfConfig":"37"},{"size":1775,"mtime":1653075608092,"results":"62","hashOfConfig":"37"},{"size":7206,"mtime":1653090405156,"results":"63","hashOfConfig":"37"},{"size":3117,"mtime":1653090563736,"results":"64","hashOfConfig":"37"},{"size":2136,"mtime":1653075608076,"results":"65","hashOfConfig":"37"},{"size":9878,"mtime":1653261887970,"results":"66","hashOfConfig":"37"},{"size":2515,"mtime":1653075608029,"results":"67","hashOfConfig":"37"},{"size":7481,"mtime":1653075607998,"results":"68","hashOfConfig":"37"},{"size":3859,"mtime":1653086112786,"results":"69","hashOfConfig":"37"},{"size":4164,"mtime":1653090448828,"results":"70","hashOfConfig":"37"},{"size":4520,"mtime":1653090293946,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1t9467a",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},"D:\\itra\\share-your-collections-app\\client\\src\\index.js",[],["150","151"],"D:\\itra\\share-your-collections-app\\client\\src\\App.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\redux\\store.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\shared\\auth.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\shared\\Header.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\redux\\reducer.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\hooks\\useRequest.hook.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\AdminPage.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\UsersTable.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\ControlPanel.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\AdminPage\\User.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\SignUpPage\\SignUpPage.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\SignInPage\\SignInPage.js",["152","153"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Nav, Row } from \"react-bootstrap\";\r\nimport { useRequest } from \"../../hooks/useRequest.hook\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport auth from \"../../shared/auth\";\r\nconst languages = require(\"../../languages.json\");\r\n\r\nexport default function SignInPage() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { loading, error, request } = useRequest();\r\n  const dispatch = useDispatch();\r\n  const lang = useSelector((state) => state.language);\r\n  const theme = useSelector((state) => state.theme);\r\n\r\n  const login = useCallback(\r\n    async (type, user) => {\r\n      try {\r\n        const data = await request(\r\n          \"/api/auth/login\",\r\n          \"POST\",\r\n          {\r\n            type,\r\n            user,\r\n            lang,\r\n            theme,\r\n          },\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        if (data.ok) {\r\n          localStorage.setItem(\"token\", data.token);\r\n          localStorage.setItem(\"userId\", data.user._id);\r\n          localStorage.setItem(\"type\", type);\r\n          await auth(data.token, dispatch);\r\n        } else {\r\n          setPassword(\"\");\r\n        }\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    },\r\n    [theme, lang]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const views = Array.from(document.getElementById(\"vk_auth\").childNodes);\r\n    console.log(views, theme, lang);\r\n    views.forEach((view) => {\r\n      view.remove();\r\n    });\r\n    window.VK.Widgets.Auth(\"vk_auth\", {\r\n      onAuth: (user) => login(\"vk\", user),\r\n    });\r\n  }, [theme, lang]);\r\n\r\n  return (\r\n    <Container\r\n      className={\r\n        \"mt-4 py-5\" +\r\n        \" bg-\" +\r\n        (theme === \"dark\" ? \"semi-dark\" : \"white\") +\r\n        \" text-\" +\r\n        (theme === \"dark\" ? \"white-50\" : \"dark\")\r\n      }\r\n    >\r\n      <Col lg={{ span: 6, offset: 3 }}>\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>{languages[lang].username}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder={languages[lang].enterName}\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>{languages[lang].password}</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder={languages[lang].password}\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Row style={{ color: \"red\", marginLeft: 0 }}>\r\n            <span>{error}</span>\r\n          </Row>\r\n\r\n          <Button\r\n            variant=\"primary\"\r\n            type=\"submit\"\r\n            onClick={() => login(\"common\", { username, password })}\r\n            disabled={loading}\r\n          >\r\n            {languages[lang].signIn}\r\n          </Button>\r\n\r\n          <Row style={{ marginTop: \"10px\", marginLeft: 0 }}>\r\n            <GoogleLogin\r\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n              redirectUri={process.env.REACT_APP_URL}\r\n              onSuccess={(res) => login(\"google\", res.profileObj)}\r\n              cookiePolicy={\"single_host_origin\"}\r\n            />\r\n          </Row>\r\n\r\n          <Row style={{ marginTop: \"10px\", marginLeft: 0 }}>\r\n            <div id=\"vk_auth\" />\r\n          </Row>\r\n\r\n          <Nav>\r\n            <Nav.Link href=\"/signUp\" style={{ padding: 0, marginTop: \"10px\" }}>\r\n              {languages[lang].signUp}\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Form>\r\n      </Col>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\itra\\share-your-collections-app\\client\\src\\pages\\Search\\SearchPage.js",["154"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport { useRequest } from \"../../hooks/useRequest.hook\";\r\nimport ItemsContainer from \"../CollectionPage/ItemsContainer\";\r\nimport ReactLoading from \"react-loading\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport { useSelector } from \"react-redux\";\r\nconst languages = require(\"../../languages.json\");\r\n\r\nfunction SearchPage() {\r\n  const paramText = useParams().text;\r\n  const lang = useSelector((state) => state.language);\r\n  const [text, setText] = useState(paramText ? paramText : \"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  const [allTags, setAllTags] = useState([]);\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [result, setResult] = useState([]);\r\n  const { request, loading } = useRequest();\r\n\r\n  async function findItems() {\r\n    const data = await request(\r\n      \"/api/items/findItems\",\r\n      \"POST\",\r\n      {\r\n        text,\r\n        tags,\r\n      },\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    if (data && data.ok) {\r\n      console.log(data);\r\n      setResult(data.items);\r\n    }\r\n  }\r\n\r\n  async function loadTags() {\r\n    const data = await request(\"/api/items/getTags\");\r\n    if (data && data.ok) {\r\n      setAllTags(data.tags);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (text) findItems().then();\r\n    loadTags().then();\r\n  }, []);\r\n\r\n  function suggestionHandler(value) {\r\n    setInput(value);\r\n    if (!value) return;\r\n    setSuggestions(\r\n      allTags.filter((e) => {\r\n        let bool = false;\r\n        for (let i = 0; i <= e.name.length - value.length; i++) {\r\n          if (e.name.substr(i, value.length) === value) bool = true;\r\n        }\r\n        return bool;\r\n      })\r\n    );\r\n  }\r\n\r\n  function renderSuggestion(suggestion) {\r\n    return <div className={\"suggestion\"}>{suggestion.name}</div>;\r\n  }\r\n  \r\n  function AutocompleteRenderInput({ addTag, ...props }) {\r\n    return (\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        shouldRenderSuggestions={(value) => value && value.trim().length > 0}\r\n        getSuggestionValue={(suggestion) => suggestion.name}\r\n        renderSuggestion={renderSuggestion}\r\n        onSuggestionSelected={(e, { suggestion }) => {\r\n          addTag(suggestion.name);\r\n        }}\r\n        inputProps={{ ...props, onChange: props.onChange }}\r\n        onSuggestionsClearRequested={() => {}}\r\n        onSuggestionsFetchRequested={() => {}}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Container>\r\n        <Form inline>\r\n          <Row\r\n            className={\"w-100 p-3 mt-3\"}\r\n            style={{ boxShadow: \"0 0 10px 0 rgba(0, 0, 0, 0.2)\" }}\r\n          >\r\n            <Col xs={8} sm={9} md={10} xl={11}>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={text}\r\n                placeholder={languages[lang].header.search}\r\n                className={\"w-100\"}\r\n                onChange={(e) => setText(e.target.value)}\r\n              />\r\n            </Col>\r\n            <Col xs={4} sm={3} md={2} lg={1}>\r\n              <Button variant=\"outline-info\" onClick={findItems}>\r\n                {languages[lang].header.search}\r\n              </Button>\r\n            </Col>\r\n            <Col xs={8} className={\"mt-3\"}>\r\n              <TagsInput\r\n                renderInput={({ addTag, ...props }) =>\r\n                  AutocompleteRenderInput({ addTag, suggestions, ...props })\r\n                }\r\n                value={tags}\r\n                inputProps={{ style: { width: \"100%\" } }}\r\n                onChange={(eventTags) => setTags(eventTags)}\r\n                onChangeInput={suggestionHandler}\r\n                inputValue={input}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n      {loading ? (\r\n        <Row className=\"justify-content-md-center\">\r\n          <ReactLoading\r\n            type={\"spin\"}\r\n            color={\"#000000\"}\r\n            height={60}\r\n            width={60}\r\n          />\r\n        </Row>\r\n      ) : (\r\n        <ItemsContainer items={result} size={2} />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\ItemPage.js",["155"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useRequest } from \"../../hooks/useRequest.hook\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport Info from \"./Info\";\r\nimport ItemFields from \"./ItemFields\";\r\nimport Comments from \"./Comments\";\r\n\r\nfunction ItemPage() {\r\n  const id = useParams().id;\r\n  const { loading, request, error } = useRequest();\r\n  const [item, setItem] = useState({});\r\n\r\n  async function loadItem() {\r\n    const data = await request(\r\n      \"/api/items/getItem\",\r\n      \"POST\",\r\n      { id },\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    if (data && data.ok) {\r\n      setItem(data.item);\r\n    }\r\n  }\r\n\r\n  async function edit(fields) {\r\n    if (fields.file) {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fields.file);\r\n      const data = await request(\"/api/files/fileUpload\", \"POST\", formData);\r\n      if (data && data.ok) {\r\n        fields.img_id = data.img_id;\r\n        fields.img_format = data.img_format;\r\n        await request(\r\n          \"/api/items/editItem\",\r\n          \"POST\",\r\n          {\r\n            ownerId: item.ownerId,\r\n            id: item._id,\r\n            token: localStorage.getItem(\"token\"),\r\n            edit: fields,\r\n          },\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        loadItem().then();\r\n      }\r\n    } else {\r\n      await request(\r\n        \"/api/items/editItem\",\r\n        \"POST\",\r\n        {\r\n          ownerId: item.ownerId,\r\n          id: item._id,\r\n          token: localStorage.getItem(\"token\"),\r\n          edit: fields,\r\n        },\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      loadItem().then();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadItem().then();\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <Row className=\"justify-content-md-center\">\r\n      <ReactLoading type={\"spin\"} color={\"#000000\"} height={60} width={60} />\r\n    </Row>\r\n  ) : (\r\n    <Container>\r\n      <Info loading={loading} edit={edit} error={error} info={item} />\r\n      <ItemFields item={item} loadItem={loadItem} />\r\n      <Comments itemID={item._id} />\r\n    </Container>\r\n  );\r\n}\r\nexport default ItemPage;\r\n","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\Info.js",["156"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { StyledDropZone } from \"react-drop-zone\";\r\nimport Image from \"cloudinary-react/lib/components/Image\";\r\nimport Transformation from \"cloudinary-react/lib/components/Transformation\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRequest } from \"../../hooks/useRequest.hook\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nconst languages = require(\"../../languages.json\");\r\n\r\nfunction Info({ info, loading2, edit }) {\r\n  const role = useSelector((state) => state.role);\r\n  const userId = useSelector((state) => state.userId);\r\n  const isAuthUser = useSelector((state) => state.isAuthUser);\r\n  const lang = useSelector((state) => state.language);\r\n  const theme = useSelector((state) => state.theme);\r\n  const [isLiked, setIsLiked] = useState(true);\r\n  const [likesCount, setLikesCount] = useState(0);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [dropText, setDropText] = useState(\"Click or drop your file here\");\r\n  const [values, setValues] = useState({ name: info.name, file: null });\r\n  const [dropColor, setDropColor] = useState(\"#888\");\r\n  const { request, loading } = useRequest();\r\n\r\n  useEffect(() => {\r\n    setValues({ name: info.name, file: null });\r\n    if (info.likes && isAuthUser) {\r\n      setIsLiked(info.likes.includes(userId));\r\n      setLikesCount(info.likes.length);\r\n    }\r\n  }, [info, userId]);\r\n\r\n  function onDrop(file) {\r\n    const name =\r\n      file.name.length < 12 ? file.name : file.name.substr(0, 9) + \"...\";\r\n    setValues({ ...values, file });\r\n    setDropText(\"Файл выбран (\" + name + \")\");\r\n    setDropColor(\"#74d239\");\r\n  }\r\n\r\n  async function setLike() {\r\n    if (loading || !isAuthUser) return;\r\n    setIsLiked(!isLiked);\r\n    const data = await request(\r\n      \"/api/items/likeItem\",\r\n      \"POST\",\r\n      {\r\n        token: localStorage.getItem(\"token\"),\r\n        id: info._id,\r\n      },\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    if (data && data.ok) {\r\n      setIsLiked(data.like);\r\n      setLikesCount(likesCount + (data.like ? 1 : -1));\r\n    }\r\n  }\r\n\r\n  async function deleteItem() {\r\n    const data = await request(\r\n      \"/api/items/deleteItem\",\r\n      \"POST\",\r\n      {\r\n        token: localStorage.getItem(\"token\"),\r\n        id: info._id,\r\n        ownerId: info.ownerId,\r\n        parent: info.parent,\r\n      },\r\n      {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    );\r\n    if (data && data.ok) {\r\n      window.location = \"/collection/\" + info.parent;\r\n    }\r\n  }\r\n\r\n  function formHandler(e) {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  function tryEdit() {\r\n    const fields = { file: values.file };\r\n    if (values.name !== info.name) fields.name = values.name;\r\n    edit(fields);\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      className={\r\n        \"mt-4 py-3 bg-\" +\r\n        (theme === \"dark\" ? \"semi-dark\" : \"white\") +\r\n        \" text-\" +\r\n        (theme === \"dark\" ? \"white-50\" : \"dark\")\r\n      }\r\n    >\r\n      <Row>\r\n        <Col\r\n          xl={4}\r\n          lg={5}\r\n          md={6}\r\n          xs={12}\r\n          className={\"text-center px-lg-2 px-0 text-lg-left\"}\r\n        >\r\n          {editMode ? (\r\n            <StyledDropZone\r\n              onMouseEnter={() => {\r\n                if (dropColor === \"#888\") setDropColor(\"#46b2ae\");\r\n              }}\r\n              onMouseLeave={() => {\r\n                if (dropColor === \"#46b2ae\") setDropColor(\"#888\");\r\n              }}\r\n              children={dropText}\r\n              style={{ borderColor: dropColor }}\r\n              onDrop={onDrop}\r\n            />\r\n          ) : (\r\n            <Image\r\n              className={\"ml-lg-4\"}\r\n              cloudName=\"itransit\"\r\n              publicId={info.img_id}\r\n              format={info.img_format}\r\n            >\r\n              <Transformation\r\n                crop=\"fill\"\r\n                gravity=\"faces\"\r\n                width=\"300\"\r\n                height=\"200\"\r\n              />\r\n            </Image>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          xl={8}\r\n          lg={7}\r\n          md={6}\r\n          xs={12}\r\n          className={\"text-center text-md-left px-2\"}\r\n        >\r\n          <Row>\r\n            <Col lg={7} md={7} xs={12}>\r\n              {editMode ? (\r\n                <Form.Control\r\n                  onChange={formHandler}\r\n                  name={\"name\"}\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                />\r\n              ) : (\r\n                <h2 className={\"fs-6\"}>{info.name}</h2>\r\n              )}\r\n              <p>\r\n                <strong>{languages[lang].collections.collection}</strong>:{\" \"}\r\n                <a href={\"/collection/\" + info.parent}>{info.parentName}</a>\r\n              </p>\r\n              <Col>\r\n                <Row className={\"justify-content-center\"}>\r\n                  {isLiked ? (\r\n                    <Icon.HeartFill\r\n                      style={{\r\n                        fontSize: \"30px\",\r\n                        color: \"#dd1c1c\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={setLike}\r\n                    />\r\n                  ) : (\r\n                    <Icon.Heart\r\n                      style={{\r\n                        fontSize: \"30px\",\r\n                        color: \"#dd1c1c\",\r\n                        cursor: \"pointer\",\r\n                      }}\r\n                      onClick={setLike}\r\n                    />\r\n                  )}\r\n                </Row>\r\n                <Row className={\"justify-content-center\"}>\r\n                  <span>{likesCount}</span>\r\n                </Row>\r\n              </Col>\r\n            </Col>\r\n            <Col\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              {role === \"Admin\" || userId === info.ownerId\r\n                ? editMode\r\n                  ? [\r\n                      <Button\r\n                        variant={\"outline-success mb-2 mb-lg-3\"}\r\n                        key={0}\r\n                        disabled={loading2}\r\n                        onClick={tryEdit}\r\n                      >\r\n                        {languages[lang].save}\r\n                      </Button>,\r\n                      <Button\r\n                        variant={\"outline-danger my-0 mt-lg-3\"}\r\n                        onClick={() => setEditMode(false)}\r\n                        disabled={loading2}\r\n                        key={1}\r\n                      >\r\n                        {languages[lang].cancel}\r\n                      </Button>,\r\n                    ]\r\n                  : [\r\n                      <Button\r\n                        variant={\"outline-primary mb-2 mt-lg-3\"}\r\n                        onClick={() => setEditMode(true)}\r\n                        key={2}\r\n                      >\r\n                        {languages[lang].editItem}\r\n                      </Button>,\r\n                      <Button\r\n                        variant={\"outline-danger mb-2 mt-lg-3\"}\r\n                        onClick={deleteItem}\r\n                        key={3}\r\n                      >\r\n                        {languages[lang].delete}\r\n                      </Button>,\r\n                    ]\r\n                : []}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Info;\r\n","D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\ItemFields.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\Comments.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\ItemPage\\Comment.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\HomePage\\HomePage.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\HomePage\\BiggestCollections.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\HomePage\\LastItems.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\CollectionsPage.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\CollectionsContainer.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\ControlPanel.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\Collection.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionsPage\\CreateCollectionModal.js",["157"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { StyledDropZone } from \"react-drop-zone\";\r\nimport \"react-drop-zone/dist/styles.css\";\r\nimport ReactLoading from \"react-loading\";\r\nimport { useSelector } from \"react-redux\";\r\nconst languages = require(\"../../languages.json\");\r\n\r\nfunction CreateCollectionModal({ show, hide, create, loading, error }) {\r\n  const lang = useSelector((state) => state.language);\r\n  const [dropText, setDropText] = useState(\r\n    lang === \"en\"\r\n      ? \"Click or drop your file here\"\r\n      : \"Нажми или сбрось свой файл сюда\"\r\n  );\r\n  const [dropColor, setDropColor] = useState(\"#888\");\r\n  const [type, setType] = useState(\"number\");\r\n  const [addError, setAddError] = useState(\"\");\r\n  const [advancedFields, setAdvancedFields] = useState([]);\r\n  const [form, setForm] = useState({\r\n    file: null,\r\n    imgUrl: \"\",\r\n    name: \"\",\r\n    theme: \"Alcohol\",\r\n    description: \"\",\r\n    advancedFields,\r\n  });\r\n\r\n  function formHandler(value, field) {\r\n    setForm({ ...form, [field]: value });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setForm({ ...form, advancedFields });\r\n  }, [advancedFields]);\r\n\r\n  function onDrop(file) {\r\n    const name =\r\n      file.name.length < 12 ? file.name : file.name.substr(0, 9) + \"...\";\r\n    setForm({ ...form, file });\r\n    setDropText(\r\n      (lang === \"rus\" ? \"Файл выбран (\" : \"File selected (\") + name + \")\"\r\n    );\r\n    setDropColor(\"#74d239\");\r\n  }\r\n\r\n  function addField() {\r\n    let count = 1;\r\n    advancedFields.map((e) => {\r\n      if (e.type === type) count++;\r\n      return null;\r\n    });\r\n    if (count > 3) {\r\n      setAddError(\"Максимальное число полей такого типа 3\");\r\n      return;\r\n    }\r\n    setAdvancedFields([...advancedFields, { type, name: \"\" }]);\r\n    setAddError(\"\");\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={hide}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{languages[lang].createCollection}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group controlId=\"collectionName\">\r\n            <Form.Label>{languages[lang].name}</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              onChange={(e) => formHandler(e.target.value, \"name\")}\r\n              value={form.name}\r\n              placeholder={languages[lang].enterName}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"themeSelect\">\r\n            <Form.Label>{languages[lang].theme}</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => formHandler(e.target.value, \"theme\")}\r\n              value={form.theme}\r\n            >\r\n              <option value={\"Alcohol\"}>{languages[lang].alcohol}</option>\r\n              <option value={\"Books\"}>{languages[lang].books}</option>\r\n              <option value={\"Coins\"}>{languages[lang].coins}</option>\r\n              <option value={\"Anime\"}>{languages[lang].anime}</option>\r\n              <option value={\"Films\"}>{languages[lang].films}</option>\r\n              <option value={\"Pictures\"}>{languages[lang].pictures}</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group>\r\n            <Form.Text>{languages[lang].addField}</Form.Text>\r\n            <Form.Control\r\n              as=\"select\"\r\n              onChange={(e) => setType(e.target.value)}\r\n              value={type}\r\n            >\r\n              <option value={\"number\"}>{languages[lang].numberField}</option>\r\n              <option value={\"text\"}>{languages[lang].textField}</option>\r\n              <option value={\"date\"}>{languages[lang].dateField}</option>\r\n              <option value={\"checkbox\"}>\r\n                {languages[lang].checkboxField}\r\n              </option>\r\n              <option value={\"input\"}>{languages[lang].inlineTextField}</option>\r\n            </Form.Control>\r\n            <Row>\r\n              <p style={{ color: \"red\", margin: \"0 auto\" }}>{addError}</p>\r\n            </Row>\r\n            <Row>\r\n              <Button\r\n                onClick={addField}\r\n                variant={\"outline-primary mt-2 mx-auto w-50\"}\r\n              >\r\n                {languages[lang].addField}\r\n              </Button>\r\n            </Row>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"themeSelect\">\r\n            <Form.Text>{languages[lang].advancedField}</Form.Text>\r\n            {advancedFields.map((e, i) => {\r\n              return e.type === \"text\" ? (\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  placeholder=\"Enter name of textarea\"\r\n                  onChange={(event) => {\r\n                    advancedFields[i].name = event.target.value;\r\n                  }}\r\n                  className={\"mt-2\"}\r\n                  key={i}\r\n                  rows={3}\r\n                />\r\n              ) : (\r\n                <Form.Control\r\n                  type={\"input\"}\r\n                  placeholder={\"Enter name of \" + e.type + \" field\"}\r\n                  key={i}\r\n                  className={\"mt-2\"}\r\n                  onChange={(event) => {\r\n                    advancedFields[i].name = event.target.value;\r\n                  }}\r\n                />\r\n              );\r\n            })}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>{languages[lang].collectionImage}</Form.Label>\r\n            <StyledDropZone\r\n              onMouseEnter={() => {\r\n                if (dropColor === \"#888\") setDropColor(\"#46b2ae\");\r\n              }}\r\n              onMouseLeave={() => {\r\n                if (dropColor === \"#46b2ae\") setDropColor(\"#888\");\r\n              }}\r\n              children={dropText}\r\n              style={{ borderColor: dropColor }}\r\n              onDrop={onDrop}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"description\">\r\n            <Form.Label>{languages[lang].shortDescription}</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={4}\r\n              placeholder={languages[lang].description}\r\n              onChange={(e) => formHandler(e.target.value, \"description\")}\r\n              value={form.description}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"container align-items-md-center\">\r\n        <Row className={\"justify-content-md-center w-100\"}>\r\n          <span className={\"my-1\"} style={{ color: \"red\" }}>\r\n            {error ? error : \"\"}\r\n          </span>\r\n        </Row>\r\n        {!loading ? (\r\n          <Row className=\"justify-content-md-center w-100\">\r\n            <Button variant=\"outline-success\" onClick={() => create(form)}>\r\n              {languages[lang].createCollection}\r\n            </Button>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"justify-content-md-center w-100\">\r\n            <ReactLoading\r\n              type={\"spin\"}\r\n              color={\"#000000\"}\r\n              height={30}\r\n              width={30}\r\n            />\r\n          </Row>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CreateCollectionModal;\r\n","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\CollectionPage.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\ItemsContainer.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\Info.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\Item.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\FilterView.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\SortView.js",["158"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nconst language = require(\"../../languages.json\");\r\n\r\nfunction SortView({ showedItems, setShowedItems, allItems }) {\r\n  const [fields, setFields] = useState(null);\r\n  const [sort, setSort] = useState({ value: \"no\" });\r\n  const [itemsCount, setItemsCount] = useState(0);\r\n  const lang = useSelector((state) => state.language);\r\n\r\n  useEffect(() => {\r\n    if (showedItems && showedItems.length > 0)\r\n      setFields([...showedItems[0].fields]);\r\n  }, [showedItems]);\r\n\r\n  useEffect(() => {\r\n    if (itemsCount !== showedItems.length) {\r\n      setSort({ value: \"no\", control: \"no\" });\r\n      setItemsCount(showedItems.length);\r\n    }\r\n  }, [itemsCount, showedItems]);\r\n\r\n  useEffect(() => {\r\n    let items = [...showedItems];\r\n    if (!sort) return;\r\n    else if (sort.value === \"no\") setShowedItems([...allItems]);\r\n    else if (typeof sort.index === \"undefined\") {\r\n      items = items.sort((a, b) => {\r\n        if (sort.value === \"ml\") {\r\n          return a.name <= b.name ? -1 : 1;\r\n        } else if (sort.value === \"lm\") return a.name <= b.name ? 1 : -1;\r\n        return 1;\r\n      });\r\n    } else {\r\n      if (sort.type === \"number\") {\r\n        items = items.sort((a, b) => {\r\n          if (sort.value === \"ml\") {\r\n            return Number(a.fields[sort.index].value) <=\r\n              Number(b.fields[sort.index].value)\r\n              ? 1\r\n              : -1;\r\n          } else if (sort.value === \"lm\") {\r\n            return Number(a.fields[sort.index].value) <=\r\n              Number(b.fields[sort.index].value)\r\n              ? -1\r\n              : 1;\r\n          }\r\n          return 1;\r\n        });\r\n      } else if (sort.type === \"date\") {\r\n        items = items.sort((a, b) => {\r\n          if (sort.value === \"ml\") {\r\n            return new Date(a.fields[sort.index].value).getTime() <=\r\n              new Date(b.fields[sort.index].value).getTime()\r\n              ? 1\r\n              : -1;\r\n          } else if (sort.value === \"lm\") {\r\n            return new Date(a.fields[sort.index].value).getTime() <=\r\n              new Date(b.fields[sort.index].value).getTime()\r\n              ? -1\r\n              : 1;\r\n          }\r\n          return 1;\r\n        });\r\n      }\r\n    }\r\n    setShowedItems([...items]);\r\n  }, [sort, allItems]);\r\n\r\n  return (\r\n    <Row className={\"justify-content-end\"}>\r\n      <Col>\r\n        <Row>\r\n          <Form.Text>Сортировка</Form.Text>\r\n          <Form.Control\r\n            value={sort.control}\r\n            as={\"select\"}\r\n            onChange={(e) =>\r\n              setSort({\r\n                value: e.target.value.split(\" \")[0],\r\n                index: e.target.value.split(\" \")[1],\r\n                type: e.target.value.split(\" \")[2],\r\n                control: e.target.value,\r\n              })\r\n            }\r\n          >\r\n            <option value={\"no\"}>{language[lang].noSort}</option>\r\n            <option value={\"ml\"}>{language[lang].nameAZ}</option>\r\n            <option value={\"lm\"}>{language[lang].nameZA}</option>\r\n            {fields &&\r\n              fields.map((e, i) => {\r\n                return e.type === \"number\" || e.type === \"date\"\r\n                  ? [\r\n                      <option\r\n                        value={\"lm \" + String(i) + \" \" + e.type}\r\n                        key={i}\r\n                      >{`${e.name} ${language[lang].lessToMore}`}</option>,\r\n                      <option\r\n                        value={\"ml \" + String(i) + \" \" + e.type}\r\n                        key={i + 1}\r\n                      >{`${e.name} ${language[lang].moreToLess}`}</option>,\r\n                    ]\r\n                  : null;\r\n              })}\r\n          </Form.Control>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default SortView;\r\n","D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\ChangeFieldsModal.js",[],"D:\\itra\\share-your-collections-app\\client\\src\\pages\\CollectionPage\\ItemCreateModal.js",["159"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Modal, Row } from \"react-bootstrap\";\r\nimport { StyledDropZone } from \"react-drop-zone\";\r\nimport ReactLoading from \"react-loading\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport { useSelector } from \"react-redux\";\r\nconst languages = require(\"../../languages.json\");\r\n\r\nfunction ItemCreateModal({ create, loading, error, show, hide, fields }) {\r\n  const lang = useSelector((state) => state.language);\r\n  const [dropText, setDropText] = useState(\r\n    lang === \"en\"\r\n      ? \"Click or drop your file here\"\r\n      : \"Нажми или сбрось свой файл сюда\"\r\n  );\r\n  const [dropColor, setDropColor] = useState(\"#888\");\r\n  const [item, setItem] = useState({ fields, name: \"\", tags: [] });\r\n  const [file, setFile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setItem({ ...item, fields });\r\n  }, [fields]);\r\n\r\n  function onDrop() {\r\n    const name =\r\n      file.name.length < 12 ? file.name : file.name.substr(0, 9) + \"...\";\r\n    setDropText(\r\n      (lang === \"rus\" ? \"Файл выбран (\" : \"File selected (\") + name + \")\"\r\n    );\r\n    setDropColor(\"#74d239\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    setFile(formData);\r\n  }\r\n\r\n  return (\r\n    <Modal show={show} onHide={hide}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{languages[lang].createItem}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form.Group>\r\n          <Form.Label>{languages[lang].itemName}</Form.Label>\r\n          <Form.Control\r\n            type={\"text\"}\r\n            onChange={(e) => setItem({ ...item, name: e.target.value })}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Text className={\"mb-2\"}>{languages[lang].tags}</Form.Text>\r\n          <TagsInput\r\n            value={item.tags}\r\n            onChange={(tags) => setItem({ ...item, tags })}\r\n            addKeys={[9, 13, 32]}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Text>{languages[lang].advancedFields}</Form.Text>\r\n          {fields.map((field, i) => {\r\n            return field.type === \"text\"\r\n              ? [\r\n                  <Form.Label key={i}>{field.name}</Form.Label>,\r\n                  <Form.Control\r\n                    key={i + 1}\r\n                    as=\"textarea\"\r\n                    onChange={(e) => {\r\n                      item.fields[i].value = e.target.value;\r\n                    }}\r\n                  />,\r\n                ]\r\n              : [\r\n                  <Form.Label key={i}>{field.name}</Form.Label>,\r\n                  <Form.Control\r\n                    key={i + 1}\r\n                    type={field.type}\r\n                    onChange={(e) => {\r\n                      item.fields[i].value =\r\n                        field.type !== \"checkbox\"\r\n                          ? e.target.value\r\n                          : e.target.checked;\r\n                    }}\r\n                  />,\r\n                ];\r\n          })}\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image\">\r\n          <Form.Label>{languages[lang].itemImage}</Form.Label>\r\n          <StyledDropZone\r\n            onMouseEnter={() => {\r\n              if (dropColor === \"#888\") setDropColor(\"#46b2ae\");\r\n            }}\r\n            onMouseLeave={() => {\r\n              if (dropColor === \"#46b2ae\") setDropColor(\"#888\");\r\n            }}\r\n            children={dropText}\r\n            style={{ borderColor: dropColor }}\r\n            onDrop={onDrop}\r\n          />\r\n        </Form.Group>\r\n      </Modal.Body>\r\n      <Modal.Footer className=\"container align-items-md-center\">\r\n        <Row className={\"justify-content-md-center w-100\"}>\r\n          <span className={\"my-1\"} style={{ color: \"red\" }}>\r\n            {error ? error : \"\"}\r\n          </span>\r\n        </Row>\r\n        {!loading ? (\r\n          <Row className=\"justify-content-md-center w-100\">\r\n            <Button\r\n              variant=\"outline-success\"\r\n              onClick={() => create(item, file)}\r\n            >\r\n              {languages[lang].createItem}\r\n            </Button>\r\n          </Row>\r\n        ) : (\r\n          <Row className=\"justify-content-md-center w-100\">\r\n            <ReactLoading\r\n              type={\"spin\"}\r\n              color={\"#000000\"}\r\n              height={30}\r\n              width={30}\r\n            />\r\n          </Row>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ItemCreateModal;\r\n",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":45,"column":5,"nodeType":"166","endLine":45,"endColumn":18,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":57,"column":6,"nodeType":"166","endLine":57,"endColumn":19,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"170","line":51,"column":6,"nodeType":"166","endLine":51,"endColumn":8,"suggestions":"171"},{"ruleId":"164","severity":1,"message":"172","line":72,"column":6,"nodeType":"166","endLine":72,"endColumn":8,"suggestions":"173"},{"ruleId":"164","severity":1,"message":"174","line":31,"column":6,"nodeType":"166","endLine":31,"endColumn":20,"suggestions":"175"},{"ruleId":"164","severity":1,"message":"176","line":35,"column":6,"nodeType":"166","endLine":35,"endColumn":22,"suggestions":"177"},{"ruleId":"164","severity":1,"message":"178","line":69,"column":6,"nodeType":"166","endLine":69,"endColumn":22,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"180","line":23,"column":6,"nodeType":"166","endLine":23,"endColumn":14,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'dispatch' and 'request'. Either include them or remove the dependency array.","ArrayExpression",["184"],"React Hook useEffect has a missing dependency: 'login'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'findItems', 'loadTags', and 'text'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'loadItem'. Either include it or remove the dependency array.",["187"],"React Hook useEffect has a missing dependency: 'isAuthUser'. Either include it or remove the dependency array.",["188"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.",["189"],"React Hook useEffect has missing dependencies: 'setShowedItems' and 'showedItems'. Either include them or remove the dependency array. If 'setShowedItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["190"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array. You can also do a functional update 'setItem(i => ...)' if you only need 'item' in the 'setItem' call.",["191"],"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [request, lang, theme, dispatch]",{"range":"208","text":"209"},"Update the dependencies array to be: [theme, lang, login]",{"range":"210","text":"211"},"Update the dependencies array to be: [findItems, loadTags, text]",{"range":"212","text":"213"},"Update the dependencies array to be: [loadItem]",{"range":"214","text":"215"},"Update the dependencies array to be: [info, isAuthUser, userId]",{"range":"216","text":"217"},"Update the dependencies array to be: [advancedFields, form]",{"range":"218","text":"219"},"Update the dependencies array to be: [sort, allItems, showedItems, setShowedItems]",{"range":"220","text":"221"},"Update the dependencies array to be: [fields, item]",{"range":"222","text":"223"},[1448,1461],"[request, lang, theme, dispatch]",[1769,1782],"[theme, lang, login]",[1554,1556],"[findItems, loadTags, text]",[1880,1882],"[loadItem]",[1457,1471],"[info, isAuthUser, userId]",[1165,1181],"[advancedFields, form]",[2363,2379],"[sort, allItems, showedItems, setShowedItems]",[910,918],"[fields, item]"]